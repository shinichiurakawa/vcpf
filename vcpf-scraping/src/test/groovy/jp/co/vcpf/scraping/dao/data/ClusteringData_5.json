{"title":"SpringBoot + Spring JPA????????????","link":"https://qiita.com/tiguchi919/items/685c0a1bb9b0e8ec68d2","content":"Qiita Community SignupLogin MySQL spring jpa SpringBoot 3 @tiguchi919 SpringBoot + Spring JPAでデータベースに接続する MySQLspringjpaSpringBoot 3 SpringBootでデータベースにアクセスしてみます jpaを使うために、以下の作業を行います ・application.propertiesにＤＢ接続のための設定を行う ・Entity, Repositoryというクラスを作成する 1.構成 sample-jpa\n│  build.gradle\n└─src\n    └─main\n        ├─java\n        │  └─com\n        │      └─jpasample\n        │              Employee.java\n        │              EmployeeRepository.java\n        │              HeloController.java\n        │              SamplePrj004JpaApplication.java\n        │              ServletInitializer.java\n        └─resources\n            │  application.properties\n            ├─static\n            └─templates\n                    index.html\n 2.ＤＢ接続情報の設定 application.propertiesに以下のように設定します application.properties spring.datasource.url=jdbc:mysql://localhost:3306/sampledb\nspring.datasource.username=testuser\nspring.datasource.password=testuser\nspring.datasource.driverClassName=com.mysql.jdbc.Driver\nspring.jpa.database=MYSQL\nspring.jpa.hibernate.ddl-auto=update\n spring.jpa.hibernate.ddl-auto=updateとしておくと、 ＤＢにテーブルが定義されていなくてもテーブルが作成されます。 3.依存関係 build.gradle dependencies {\n    compile('org.springframework.boot:spring-boot-starter-data-jpa')\n    compile('org.springframework.boot:spring-boot-starter-thymeleaf')\n    compile('org.springframework.boot:spring-boot-starter-web')\n    runtime('org.springframework.boot:spring-boot-devtools')\n    runtime('mysql:mysql-connector-java')\n    compileOnly('org.projectlombok:lombok')\n    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')\n    testCompile('org.springframework.boot:spring-boot-starter-test')\n}\n 4.データベースにテーブルを定義する。 従業員マスタを検索するサンプルとしています。 CREATE TABLE `m_emp` (\n  `empno` bigint(20) NOT NULL AUTO_INCREMENT,\n  `empname` varchar(255) DEFAULT NULL,\n  `departmentid` varchar(10) DEFAULT NULL,\n  PRIMARY KEY (`empno`)\n) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8\n insert into sampledb.m_emp (empname,departmentid) values ('従業員A','10101001') ,('従業員B','10101001') ,('従業員C','10101002') ,('従業員D','10101003') 5.Entityクラスを作成する Employee.java import javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"m_emp\")\npublic class Employee {\n    @Id\n    @Column(name=\"empno\")\n    @GeneratedValue(strategy=GenerationType.IDENTITY)\n    private Long id;\n    private String empname;\n    public Long getId() {\n        return id;\n    }\n    public void setId(Long id) {\n        this.id = id;\n    }\n    public String getEmpname() {\n        return empname;\n    }\n    public void setEmpname(String empname) {\n        this.empname = empname;\n    }\n}\n 6.Repository EmployeeRepository.java import org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;\n\n@Repository\npublic interface EmployeeRepository extends JpaRepository<Employee, Long> {}\n\n 7.Controller 従業員マスタを全件検索しています。 import java.util.List;\n\nimport javax.transaction.Transactional;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\n\n@Controller\npublic class HeloController {\n    @Autowired\n    EmployeeRepository empRepository;\n    @RequestMapping(value = \"/\", method = RequestMethod.GET)\n    public String index(Model model) {\n        List<Employee> emplist=empRepository.findAll();\n        model.addAttribute(\"emplist\", emplist);\n        return \"index\";\n    }\n}\n 8.html index.html <!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:th=\"http://www.thymeleaf.org\">\n    <head>\n        <title>Springboot</title>\n        <meta charset=\"utf-8\" />\n    </head>\n    <body>\n        <h1 th:text=\"${title}\"></h1>\n        <table>\n            <tr th:each=\"emp : ${emplist}\" th:object=\"${emp}\">\n                <td th:text=\"*{id}\"></td>\n                <td th:text=\"*{empname}\"></td>\n            </tr>\n        </table>\n    </body>\n</html>\n 9.Springbootを実行してＵＲＬにアクセスしてみます。 http://localhost:8080/ 無事表示されました。 Edit request Stock Like3 tiguchi919 SpringBootでデータベースにアクセスしてみます © 2011-2018 Increments Inc. Terms Privacy Help Contact About Users Tags Items Blog API Qiita:Team"}