{"title":"SpringBoot?JPA????DB?Insert?????8????","link":"https://qiita.com/Tsukuru/items/e4dab07c821ea9325768","content":"Qiita Community SignupLogin Java MySQL spring jpa spring-boot 24 @Tsukuru アカウンティング・サース・ジャパンDay 2 SpringBootとJPAを使ってDBにInsertするための８つのこと JavaMySQLspringjpaspring-boot 24  SpringBootとJPAを使ってDBにInsertするための８つのこと 目次 0. 今回の目的 1. SpringBootのプロジェクト作成 2. MysqlにDBを用意する 3. PropertiesFileの設定 4. Entityクラスの用意 5. Repositoryクラスの用意 6. Serviceクラスの用意 7. Controllerクラスの用意 8. curlを使って確認 9. おわり  0. 今回の目的 SpringBootを始めたばかりの時に、JPAを使ってDBにInsertするだけのことが出来なくて 猫にも分かる記事がなかったのであの時の自分に向けて書く。 特別JPAについての説明などはないです、ただただDBにInsertすることを記事にしただけです。 1. SpringBootのプロジェクト作成 先ずはSpringBootのプロジェクトを作成します SPRING INITIALIZRにアクセスする Generate a [Gradle Project] with [Java] and Spring Boot [1.5.9] に設定する [Group]と[Artifact]は適当でどうぞ。今回はGroup名は[com.jpa]にArtifact名は[demojpa]にします。 [Dependencies]には[Web][MySql][JPA][lombok]を設定します。 以上で[Generate Project]で作成してください。 作成されたプロジェクトを展開してIDEでOPENする。（今回はInteliJ IDEAを使用） 2. MysqlにDBを用意する MySqlにJPAのテスト用のDBを用意する。 今回はこのような構成で用意しました。 DB名は[jpa_test] CREATE TABLE `members` (\n  `id` INT NOT NULL AUTO_INCREMENT,\n  `name` VARCHAR(255) NULL,\n  PRIMARY KEY (`id`));\n\n id name 1 hoge 3. PropertiesFileの設定 IDEを開く srcのmain直下の[resources]の[application.properties]を開く 以下の３行のおまじないを書き、MySqlに繋げるようにしておく。 spring.datasource.url=jdbc:mysql://localhost:3306/jpa_test spring.datasource.username= MySqlのusername spring.datasource.password= MySqlのpassword 4. Entityクラスの用意 srcのmain直下に[domain]Packageを作成する。 [domain]Packageの中に[Members.java]を作成して以下のコードを記述する。 package com.jpa.demojpa.domain;\n\nimport lombok.Data;\n\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.Id;\n\n@Data\n@Entity\npublic class Members {\n    @Id\n    @GeneratedValue\n    private Integer id;\n    private String name;\n}\n\n 5. Repositoryクラスの用意 [domain]Packageの中に[MembersRepository.java]を作成して以下のコードを記述する。 package com.jpa.demojpa.domain;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;\n\n@Repository\npublic interface MembersRepository extends JpaRepository<Members, Integer> {\n}\n\n 6. Serviceクラスの用意 srcのmain直下に[service]Packageを作成する。 [service]Packageの中に[MembersService.java]を作成して以下のコードを記述する。 package com.jpa.demojpa.service;\n\nimport com.jpa.demojpa.domain.Members;\nimport com.jpa.demojpa.domain.MembersRepository;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.stereotype.Service;\n\n@Service\n@RequiredArgsConstructor\npublic class MembersService {\n    private final MembersRepository membersRepository;\n\n    public String create() {\n        Members members = new Members();\n        members.setName(\"hoge\");\n        membersRepository.save(members);\n        return \"success!!\";\n    }\n}\n\n 7. Controllerクラスの用意 srcのmain直下に[web]Packageを作成する。 [web]Packageの中に[MembersController.java]を作成して以下のコードを記述する。 package com.jpa.demojpa.web;\n\nimport com.jpa.demojpa.service.MembersService;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequestMapping(\"/members\")\n@RequiredArgsConstructor\npublic class MembersController {\n    private final MembersService membersService;\n\n    @PostMapping\n    public String create() {\n        return membersService.create();\n    }\n}\n\n 8. curlを使って確認 ターミナルを開き以下のcurlで確認する。 curl http://localhost:8080/members\n [success!!]が返ってくるはずです、返ってきたらMySqlを確認してください。 9. おわり 以上でSpringBootとJPAを使ってDBにInsertするための８つのこと終了です。 あとは[findOne][save][delete]とかがJpaRepositoryには用意されているので使ってみてください。 membersRepository.findOne(1);\nmembersRepository.save(members);\nmembersRepository.delete(1);\n Edit request Stock Like24 Tsukuru  SpringBootとJPAを使ってDBにInsertするための８つのこと  0. 今回の目的 1. SpringBootのプロジェクト作成 2. MysqlにDBを用意する 3. PropertiesFileの設定 4. Entityクラスの用意 5. Repositoryクラスの用意 6. Serviceクラスの用意 7. Controllerクラスの用意 8. curlを使って確認 9. おわり © 2011-2018 Increments Inc. Terms Privacy Help Contact About Users Tags Items Blog API Qiita:Team"}